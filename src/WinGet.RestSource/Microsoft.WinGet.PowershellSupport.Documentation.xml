<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WinGet.PowershellSupport</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WinGet.RestSource.PowershellSupport.Helpers.PackageManifestUtils">
            <summary>
            Wrapper class around PackageManifest object.
            Supports converting yaml manifest to json object.
            </summary>
        </member>
        <member name="M:Microsoft.WinGet.RestSource.PowershellSupport.Helpers.PackageManifestUtils.AddManifestToPackageManifest(Microsoft.WinGetUtil.Models.V1.Manifest,System.String)">
            <summary>
            Merges a merged manifest object into an existing json representation of the app.
            </summary>
            <param name="manifest">Merged manifest object.</param>
            <param name="priorManifest">Prior json data to merge with.</param>
            <returns>A <see cref="T:Microsoft.WinGet.RestSource.Utils.Models.Schemas.PackageManifest"/> representing the rest source json representation of the package.</returns>
        </member>
        <member name="T:Microsoft.WinGet.RestSource.PowershellSupport.YamlToRestConverter">
            <summary>
            Supports converting yaml manifest to json string.
            Primarily supports powershell modules.
            </summary>
        </member>
        <member name="M:Microsoft.WinGet.RestSource.PowershellSupport.YamlToRestConverter.AddManifestToPackageManifest(System.String,System.String)">
            <summary>
            Processes a directory for yaml manifests and converts it into the rest json format.
            </summary>
            <param name="directory">direcoty to process. Should contain the manifests for a single app.</param>
            <param name="priorRestManifest">Prior json data to merge with.</param>
            <returns>A string of the rest source json.</returns>
        </member>
    </members>
</doc>
