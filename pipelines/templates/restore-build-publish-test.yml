# Template helper to restore, build, and publish

steps:

# Checkout repo with lfs enabled
- checkout: self
  lfs: "true"

## Restore
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'config'
    nugetConfigPath: '$(Build.SourcesDirectory)\src\NuGet.config'
    restoreDirectory: '$(Build.SourcesDirectory)\src\packages'

## Build
- task: VSBuild@1
  displayName: Build
  inputs:
    solution: '**\*.sln'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    clean: true

## Publish
# Publish ARM Templates
- template: copy-and-publish.yml
  parameters:
    name: WinGet.Restsource.Infrastructure
    source: '$(Build.SourcesDirectory)\src\WinGet.RestSource.Infrastructure\bin\$(BuildConfiguration)'

# Publish scripts
- template: copy-and-publish.yml
  parameters:
    name: ReleaseScripts
    source: '$(Build.SourcesDirectory)\scripts\Release'

# Publish Rest Function App
- template: package-and-publish.yml
  parameters:
    name: WinGet.RestSource.Functions
    projects: '$(Build.SourcesDirectory)\src\WinGet.RestSource.Functions\WinGet.RestSource.Functions.csproj'
    buildconfig: '$(BuildConfiguration)'
    zipAfterPublish: True

# Publish Rest Function App
- template: package-and-publish.yml
  parameters:
    name: WinGet.RestSource.IntegrationTest
    projects: '$(Build.SourcesDirectory)\src\WinGet.RestSource.IntegrationTest\WinGet.RestSource.IntegrationTest.csproj'
    buildconfig: '$(BuildConfiguration)'
    zipAfterPublish: False

# Publish powershell
- template: copy-and-publish-powershell.yml

## Run Unit Tests
- template: run-unittests.yml
  parameters:
    name: WinGet.RestSource.UnitTest
    testDirectory: '$(Build.SourcesDirectory)\src\WinGet.RestSource.UnitTest\bin\$(BuildConfiguration)\net6.0'
    dll: Microsoft.WinGet.RestSource.UnitTest.

## Component Governance
- task: ComponentGovernanceComponentDetection@0
  displayName: Component Governance
  inputs:
    scanType: 'Register'
    verbosity: 'Verbose'
    alertWarningLevel: 'High'
    failOnAlert: true
