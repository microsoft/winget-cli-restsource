# Template helper to copy files and publish them as an artifact
# If we end up with multiple test dlls, copy the dlls to a test directory
# and update how the dlls are specified.
parameters:
  name: ''
  dll: ''
  source: ''

steps:
- task: CopyFiles@2
  displayName: 'Copy Files: ${{ parameters.name }}'
  inputs:
    SourceFolder: ${{ parameters.source }}
    TargetFolder:  '$(build.artifactstagingdirectory)\${{ parameters.name }}'
    CleanTargetFolder: true
    OverWrite: true
  condition: succeeded()

- task: VSTest@2
  displayName: 'Run tests: ${{ parameters.name }}'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: ${{ parameters.dll }}
    searchFolder: '$(build.artifactstagingdirectory)\${{ parameters.name }}'
    codeCoverageEnabled: true
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    
    # Configure test to use Cosmos DB emulator, the key is a fixed value in the emulator,
    # and the endpoint is an automatic variable set in the environment.
    overrideTestrunParameters: '-CosmosAccountEndpoint "$(CosmosDbEmulator.Endpoint)"
      -CosmosReadOnlyKey "C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="
      -CosmosReadWriteKey "C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="
      -CosmosDatabase "cosmossql-pkgsrest-test"
      -CosmosContainer "ManifestsTest"
      -ServerIdentifier "winget-cli-restsource-test"'
  condition: succeeded()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: WinGet.RestSource-${{ parameters.name }}'
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: '$(Agent.TempDirectory)\TestResults'
    ArtifactName: 'WinGet.RestSource-${{ parameters.name }}'