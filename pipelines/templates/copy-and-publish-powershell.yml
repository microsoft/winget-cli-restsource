# Template helper to copy powershell scripts and all dependencies
steps:
- task: CopyFiles@2
  displayName: 'Copy Files: Powershell module'
  inputs:
    SourceFolder: '$(build.SourcesDirectory)\Tools\PowershellModule\src'
    TargetFolder: '$(build.artifactstagingdirectory)\Winget.Powershell.Source'
    CleanTargetFolder: true
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy Files: Helper Libs x86'
  inputs:
    Contents: |
     ${{ parameters.source }}\Microsoft.Extensions.Logging.Abstractions.dll
     ${{ parameters.source }}\Microsoft.WinGet.PowershellSupport.dll
     ${{ parameters.source }}\Microsoft.WinGet.RestSource.Utils.dll
     ${{ parameters.source }}\Newtonsoft.Json.dll
     ${{ parameters.source }}\System.ComponentModel.Annotations.dll
     ${{ parameters.source }}\YamlDotNet.dll
     ${{ parameters.source }}\WinGetUtilInterop.dll
     ${{ parameters.source }}\runtimes\win-x86}\native\WinGetUtil.dll
    TargetFolder: '$(build.artifactstagingdirectory)\Winget.Powershell.Source\HelperLib\x86'
    OverWrite: true
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy Files: Helper libs x64'
  inputs:
    Contents: |
     ${{ parameters.source }}\Microsoft.Extensions.Logging.Abstractions.dll
     ${{ parameters.source }}\Microsoft.WinGet.PowershellSupport.dll
     ${{ parameters.source }}\Microsoft.WinGet.RestSource.Utils.dll
     ${{ parameters.source }}\Newtonsoft.Json.dll
     ${{ parameters.source }}\System.ComponentModel.Annotations.dll
     ${{ parameters.source }}\YamlDotNet.dll
     ${{ parameters.source }}\WinGetUtilInterop.dll
     ${{ parameters.source }}\runtimes\win-x64}\native\WinGetUtil.dll
    TargetFolder: '$(build.artifactstagingdirectory)\Winget.Powershell.Source\HelperLib\x64'
    OverWrite: true
    flattenFolders: true

- task: CopyFiles@2
  displayName: 'Copy Files: Arm Templates'
  inputs:
    SourceFolder: '$(build.SourcesDirectory)\src\WinGet.RestSource.Infrastructure\bin\$(BuildConfiguration)'
    TargetFolder: '$(build.artifactstagingdirectory)\Winget.Powershell.Source\ARMTemplate'
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy Files: azure function'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)\WinGet.RestSource.Functions'
    TargetFolder: '$(build.artifactstagingdirectory)\Winget.Powershell.Source\RestAPI'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: WinGet.RestSource-Winget.Powershell.Source'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\Winget.Powershell.Source'
    ArtifactName: 'WinGet.RestSource-Winget.Powershell.Source'
