# Template helper to perform bin-skim on produced binaries.
# BinSkim requires the PDB files for binaries in order to function. This means 3rd party dlls and exe will fail the scan.
# The recommendation for solving this is to copy the dlls we wish to scan to a flat directory with the PDB files, and scan those.

parameters:
  name: ''
  binaries: ''

steps:
# This script identifies all the PBD files in the binaries dir, then copies those and files with matching
# names to a scan directory.
- task: PowerShell@2
  displayName: 'Copy Files: ${{ parameters.name }}'
  inputs:
    targetType: 'inline'
    script: |
      $sourcePath = "${{ parameters.binaries }}"
      $scanPath = "$(Agent.TempDirectory)\binSkimTmp\${{ parameters.name }}\"
      
      #Find PDB files
      $pdbFiles = Get-ChildItem -Path $sourcePath -Include *.pdb -File -Recurse | select FullName
      $pdbFiles
      
      # Get List of files that match PBD
      $filesToCopy
      foreach($file in $pdbFiles){
          $subPath = $file.FullName.ToString().Substring(0,$file.FullName.Length-3) + "*"
          $filesToCopy += Get-ChildItem -Path $subPath -File | select FullName
      }
      $filesToCopy
      
      $_ = New-Item -ItemType Directory -Force -Path $scanPath
      foreach($file in $filesToCopy){
          Copy-Item -Path $file.FullName -Destination $scanPath -Force
      }

# This performs BinSkin on DLL and EXE in the scan directory
- task: securedevelopmentteam.vss-secure-development-tools.build-task-binskim.BinSkim@3
  displayName: 'BinSkim: ${{ parameters.name }}'
  inputs:
    InputType: Basic
    AnalyzeTarget: '$(Agent.TempDirectory)\binSkimTmp\${{ parameters.name }}\*.dll; $(Agent.TempDirectory)\binSkimTmp\${{ parameters.name }}\*.exe'
    AnalyzeVerbose: true