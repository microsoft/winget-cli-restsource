# Copyright (c) Microsoft Corporation. All rights reserved
# CI pipeline for winget-cli-restsource

# Branches that trigger a build on commit
trigger:
  branches:
    include:
    - main

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling

    sdl:
      codeInspector:
        enabled: true

    stages:
    - stage: __default
      jobs:
      - job: 'BuildTestPublish'
        displayName: 'Build Test & Publish'
        timeoutInMinutes: 60
        variables:
        - name: BuildConfiguration
          value: 'release'
        - name: BuildPlatform
          value: 'Any CPU'

        steps:
        # Restore and Build
        - template: pipelines/templates/restore-build-test.yml@self

        templateContext:
          outputs:
          # Publish ARM Templates
          - output: pipelineArtifact
            displayName: 'Publish Artifact: WinGet.RestSource-WinGet.Restsource.Infrastructure'
            targetPath: $(Build.ArtifactStagingDirectory)\WinGet.Restsource.Infrastructure
            ArtifactName: WinGet.RestSource-WinGet.Restsource.Infrastructure


          # Publish scripts
          - output: pipelineArtifact
            displayName: 'Publish Artifact: WinGet.RestSource-ReleaseScripts'
            targetPath: $(Build.ArtifactStagingDirectory)\ReleaseScripts
            ArtifactName: WinGet.RestSource-ReleaseScripts


          # Publish Rest Function App
          # package projects
          - output: nuget
            displayName: 'Package Azure Function: WinGet.RestSource-WinGet.RestSource.Functions'
            useDotNetTask: true
            packageParentPath: '$(Build.ArtifactStagingDirectory)'
            publishWebProjects: false
            projects: $(Build.SourcesDirectory)\src\WinGet.RestSource.Functions\WinGet.RestSource.Functions.csproj
            arguments: --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\WinGet.RestSource.Functions --no-restore
            zipAfterPublish: True

          # publish as an artifact
          - output: pipelineArtifact
            displayName: 'Publish Artifact: WinGet.RestSource-WinGet.RestSource.Functions'
            targetPath: $(Build.ArtifactStagingDirectory)\WinGet.RestSource.Functions
            ArtifactName: WinGet.RestSource-WinGet.RestSource.Functions


          # Publish Rest Function App
          # package projects
          - output: nuget
            displayName: 'Package Azure Function: WinGet.RestSource-WinGet.RestSource.IntegrationTest'
            useDotNetTask: true
            packageParentPath: '$(Build.ArtifactStagingDirectory)'
            publishWebProjects: false
            projects: $(Build.SourcesDirectory)\src\WinGet.RestSource.IntegrationTest\WinGet.RestSource.IntegrationTest.csproj
            arguments: --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\WinGet.RestSource.IntegrationTest --no-restore
            zipAfterPublish: False

          # publish as an artifact
          - output: pipelineArtifact
            displayName: 'Publish Artifact: WinGet.RestSource-WinGet.RestSource.IntegrationTest'
            targetPath: $(Build.ArtifactStagingDirectory)\WinGet.RestSource.IntegrationTest
            ArtifactName: WinGet.RestSource-WinGet.RestSource.IntegrationTest

          # Publish Helper Libs - win-x86
          - output: nuget
            displayName: 'Package Helper Libs: Portable'
            useDotNetTask: true
            packageParentPath: '$(Build.ArtifactStagingDirectory)'
            publishWebProjects: false
            projects: '$(Build.SourcesDirectory)\src\WinGet.RestSource.PowershellSupport\WinGet.RestSource.PowershellSupport.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\Winget.PowerShell.Source\Library --no-restore'
            zipAfterPublish: false

          - output: pipelineArtifact
            displayName: 'Publish Artifact: WinGet.RestSource-Winget.PowerShell.Source'
            targetPath: '$(Build.ArtifactStagingDirectory)\Winget.PowerShell.Source'
            ArtifactName: 'WinGet.RestSource-Winget.PowerShell.Source'
